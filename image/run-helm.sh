set -e

DIR=$(mktemp -d '/tmp/helm.XXXXXXX')
OUTDIR="$DIR/out"
mkdir -p "$OUTDIR/generated"

# Write the input from stdin out as files, and as one file so it can
# be examined for functionConfig.
tee $DIR/input.yaml | kpt --stack-trace fn sink "$OUTDIR"

# The files generated by the chart will go in generated/ and recycled
# back here when the image in called again. Since rerunning the
# templates can result in completely different files, these get
# removed beforehand.
rm -f "$OUTDIR/generated/*.yaml"

CONFIG="$DIR/config.yaml"
# Get functionConfig, if any, and extract some values from it.
yq read "$DIR/input.yaml" 'functionConfig' > "$CONFIG"
yq read "$CONFIG" 'data.values' > "$DIR/values.yaml"

name=$(yq read "$CONFIG" 'data.releaseName')
namespace=$(yq read "$CONFIG" 'data.namespace')

# Generate the chart. Piping it through `kpt fn source` standardises
# the file paths based on the names.
helm template "${name}" ./*.tgz \
     --namespace "${namespace}" \
     --values "$DIR/values.yaml" \
    | kpt fn source | kpt fn sink "$OUTDIR/generated/"

# Write all the files back out on stdout
kpt --stack-trace fn source "$OUTDIR"
